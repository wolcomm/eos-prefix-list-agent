name: "CI/CD"
on:
  - push
  - pull_request
jobs:
  safety:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: earthly
        uses: ./.github/actions/earthly
        with:
          target: safety
          secrets: "SAFETY_API_KEY=${{ secrets.SAFETY_API_KEY }}"
          ghcr_token: ${{ secrets.GITHUB_TOKEN }}
          acr_token: ${{ secrets.AZURE_ACR_TOKEN }}
  lint:
    needs: [safety]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: earthly
        uses: ./.github/actions/earthly
        with:
          target: lint
          ghcr_token: ${{ secrets.GITHUB_TOKEN }}
          acr_token: ${{ secrets.AZURE_ACR_TOKEN }}
  typecheck:
    needs: [safety]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: earthly
        uses: ./.github/actions/earthly
        with:
          target: typecheck
          ghcr_token: ${{ secrets.GITHUB_TOKEN }}
          acr_token: ${{ secrets.AZURE_ACR_TOKEN }}
  build:
    needs: [safety]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: earthly
        uses: ./.github/actions/earthly
        with:
          target: build
          artifact_path: dist/swix/*.swix
          ghcr_token: ${{ secrets.GITHUB_TOKEN }}
          acr_token: ${{ secrets.AZURE_ACR_TOKEN }}
  test:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ceos_version:
          - "4.26.3M"
          - "4.27.0F"
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: earthly
        uses: ./.github/actions/earthly
        with:
          target: test
          build_args: "CEOS_VERSION=${{ matrix.ceos_version }}"
          artifact_name: coverage-ceos-${{ matrix.ceos_version }}
          artifact_path: coverage.xml
          allow_privileged: true
          ghcr_token: ${{ secrets.GITHUB_TOKEN }}
          acr_token: ${{ secrets.AZURE_ACR_TOKEN }}
      - name: upload coverage report
        uses: codecov/codecov-action@v2
        env:
          CEOS_VERSION: ${{ matrix.ceos_version }}
        with:
          files: coverage.xml
          env_vars: CEOS_VERSION
  # build-docs:
  #   needs: [safety]
  #   runs-on: ubuntu-latest
  #   env:
  #     TOX_JOB: docs
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: setup python ${{ env.DEFAULT_PYTHON }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ env.DEFAULT_PYTHON }}
  #     - name: install ${{ env.TOX_JOB }} job runner
  #       run: python -m pip install -r packaging/requirements-tox.txt
  #     - name: run ${{ env.TOX_JOB }} job
  #       run: tox -e $TOX_JOB
  #     - name: upload built docs artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: docs
  #         path: build/docs/html/
  # publish-docs:
  #   if: ${{ github.event_name == 'push' }}
  #   needs:
  #     - build-docs
  #     - lint
  #     - typecheck
  #     - test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v2
  #     - name: download built docs artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: docs
  #         path: build/docs/html/
  #     - name: deploy to github-pages
  #       uses: JamesIves/github-pages-deploy-action@4.1.1
  #       with:
  #         branch: gh-pages
  #         folder: build/docs/html
  #         clean-exclude: /index.html
  # publish-dist:
  #   if: ${{ github.event_name == 'push' }}
  #   needs:
  #     - build-dist
  #     - lint
  #     - typecheck
  #     - test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: setup python ${{ env.DEFAULT_PYTHON }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ env.DEFAULT_PYTHON }}
  #     - name: download sdist artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: sdist
  #         path: dist/
  #     - name: download wheel artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: wheel
  #         path: dist/
  #     - name: publish built artifacts to test.pypi.org
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         user: __token__
  #         password: ${{ secrets.TEST_PYPI_API_TOKEN }}
  #         repository_url: https://test.pypi.org/legacy/
  #         skip_existing: true
  #     - name: publish built artifacts to pypi.org
  #       if: ${{ startsWith(github.ref, 'refs/tag') }}
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_API_TOKEN }}
