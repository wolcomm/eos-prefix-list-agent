name: "CI/CD"
on:
  - push
  - pull_request
permissions:
  packages: write
jobs:
  safety:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: earthly
        uses: ./.github/actions/earthly
        with:
          target: safety
          push: ${{ github.ref == 'refs/heads/master' }}
          ghcr_token: ${{ secrets.GITHUB_TOKEN }}
          acr_token: ${{ secrets.AZURE_ACR_TOKEN }}
  lint:
    needs: [safety]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg:
          - "prefix_list_agent"
          - "prefix_list_agent_cli"
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: earthly
        uses: ./.github/actions/earthly
        with:
          target: lint
          build_args: "PKG=${{ matrix.pkg }}"
          ghcr_token: ${{ secrets.GITHUB_TOKEN }}
          acr_token: ${{ secrets.AZURE_ACR_TOKEN }}
  typecheck:
    needs: [safety]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg:
          - "prefix_list_agent"
          - "prefix_list_agent_cli"
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: earthly
        uses: ./.github/actions/earthly
        with:
          target: typecheck
          build_args: "PKG=${{ matrix.pkg }}"
          ghcr_token: ${{ secrets.GITHUB_TOKEN }}
          acr_token: ${{ secrets.AZURE_ACR_TOKEN }}
  build:
    needs: [safety]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: earthly
        uses: ./.github/actions/earthly
        with:
          target: build-swix
          artifact_path: dist/swix/*.swix
          push: ${{ github.ref == 'refs/heads/master' }}
          ghcr_token: ${{ secrets.GITHUB_TOKEN }}
          acr_token: ${{ secrets.AZURE_ACR_TOKEN }}
  test:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ceos_version:
          - "4.28.2F"
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: download built package
        uses: actions/download-artifact@v3
        with:
          name: build-swix
      - name: earthly
        uses: ./.github/actions/earthly
        with:
          target: test
          build_args: "CEOS_VERSION=${{ matrix.ceos_version }},LOCAL_PACKAGE=./*.swix"
          artifact_name: coverage-ceos-${{ matrix.ceos_version }}
          artifact_path: coverage.xml
          allow_privileged: true
          push: ${{ github.ref == 'refs/heads/master' }}
          ghcr_token: ${{ secrets.GITHUB_TOKEN }}
          acr_token: ${{ secrets.AZURE_ACR_TOKEN }}
      - name: upload coverage report
        uses: codecov/codecov-action@v3
        env:
          CEOS_VERSION: ${{ matrix.ceos_version }}
        with:
          files: coverage.xml
          env_vars: CEOS_VERSION
  build-docs:
    needs: [safety]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: earthly
        uses: ./.github/actions/earthly
        with:
          target: docs
          artifact_path: dist/book
          ghcr_token: ${{ secrets.GITHUB_TOKEN }}
          acr_token: ${{ secrets.AZURE_ACR_TOKEN }}
  release-type:
    if: github.event_name == 'push' && github.ref_type == 'tag'
    needs:
      - lint
      - typecheck
      - test
      - build-docs
    runs-on: ubuntu-latest
    outputs:
      prerelease: ${{ steps.release-type.outputs.prerelease }}
    steps:
      - name: set release type
        id: release-type
        run: |
          echo "::echo::on"
          if [[ "${{ github.ref_name }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::set-output name=prerelease::false"
          else
            echo "::set-output name=prerelease::true"
          fi
          echo "::echo::off"
  publish-docs:
    needs:
      - release-type
    if: needs.release-type.outputs.prerelease == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: download built docs artifact
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: dist/book
      - name: deploy to github-pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist/book
  publish-release:
    needs:
      - release-type
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: download built package
        uses: actions/download-artifact@v3
        with:
          name: build-swix
      - name: publish release
        uses: softprops/action-gh-release@v1
        with:
          files: "./*.swix"
          draft: true
          prerelease: ${{ needs.release-type.outputs.prerelease == 'true' }}
          fail_on_unmatched_files: true
          generate_release_notes: true
